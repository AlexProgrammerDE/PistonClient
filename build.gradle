plugins {
    id 'fabric-loom' version '0.6-SNAPSHOT'
    id 'maven-publish'
    id 'java'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    maven {
        name = "CottonMC"
        url = "https://server.bbkr.space/artifactory/libs-release"
    }
    maven {
        name = "jitpack"
        url = 'https://jitpack.io'
    }
    maven {
        name = 'lukflug'
        url = 'https://lukflug.github.io/maven'
    }
    maven {
        name = 'sponge-repo'
        url = 'https://repo.spongepowered.org/maven'
    }
    maven {
        name = 'sonatype-repo'
        url = 'https://oss.sonatype.org/content/repositories/snapshots'
    }
    mavenCentral()
    google()
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation include("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}")

    implementation 'com.github.JnCrMx:discord-game-sdk4j:v0.5'
    modImplementation include("com.github.TerraformersMC:ModMenu:v1.16.5")

    implementation 'commons-validator:commons-validator:1.7'

    modImplementation 'net.earthcomputer.multiconnect:multiconnect-api:1.3.36'
    include 'net.earthcomputer.multiconnect:multiconnect-api:1.3.36'
    modRuntime 'net.earthcomputer.multiconnect:multiconnect-slim:1.3.36'
    /*

    modImplementation include("net.kyori:adventure-platform-fabric:4.0.0-SNAPSHOT")
    modImplementation include("com.github.cabaletta:baritone:v1.6.3") {
        exclude group: "org.lwjgl"
        exclude group: "org.lwjgl.lwjgl"
        exclude group: "net.java.jinput"
        exclude group: "net.sf.jopt-simple"
        exclude group: "org.ow2.asm"
    }

    implementation 'com.lukflug:panelstudio:0.1.8'
    implementation 'com.lukflug:panelstudio-mc16:0.1.9'

    implementation 'com.github.ZeroMemes:Alpine:1.9'

    implementation 'me.xdrop:fuzzywuzzy:1.3.1'

    */

    // PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
    // You may need to force-disable transitiveness on them.
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // Select the repositories you want to publish to
    // To publish to maven local, no extra repositories are necessary. Just use the task `publishToMavenLocal`.
    repositories {
        // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    }
}